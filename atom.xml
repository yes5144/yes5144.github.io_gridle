<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://yes5144.github.io/</id>
    <title>Talk is cheap. Show me the code</title>
    <updated>2019-07-07T08:02:43.248Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://yes5144.github.io/"/>
    <link rel="self" href="https://yes5144.github.io//atom.xml"/>
    <subtitle>唯手熟尔</subtitle>
    <logo>https://yes5144.github.io//images/avatar.png</logo>
    <icon>https://yes5144.github.io//favicon.ico</icon>
    <rights>All rights reserved 2019, Talk is cheap. Show me the code</rights>
    <entry>
        <title type="html"><![CDATA[windows安装zip命令]]></title>
        <id>https://yes5144.github.io//post/windows-an-zhuang-zip-ming-ling</id>
        <link href="https://yes5144.github.io//post/windows-an-zhuang-zip-ming-ling">
        </link>
        <updated>2019-07-07T07:37:30.000Z</updated>
        <content type="html"><![CDATA[<h3 id="win-安装zip命令">win 安装zip命令</h3>
<p>http://gnuwin32.sourceforge.net/packages/zip.htm</p>
<h3 id="mingw-w64安装教程著名cc编译器gcc的windows版本">MinGW-w64安装教程——著名C/C++编译器GCC的Windows版本</h3>
<p>http://mingw-w64.org/doku.php
https://www.cnblogs.com/ggg-327931457/p/9694516.html</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Python and go 代码示例]]></title>
        <id>https://yes5144.github.io//post/python-and-go-dai-ma-shi-li</id>
        <link href="https://yes5144.github.io//post/python-and-go-dai-ma-shi-li">
        </link>
        <updated>2019-07-02T15:48:14.000Z</updated>
        <content type="html"><![CDATA[<p>https://www.programcreek.com/python/example/534/MySQLdb.connect</p>
<p>https://gobyexample.com/select
https://gobyexample.xgwang.me/hello-world.html</p>
<p>https://golangbot.com/channels/</p>
<p>https://www.datacamp.com/home</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Vim 简单配置]]></title>
        <id>https://yes5144.github.io//post/vim-jian-dan-pei-zhi</id>
        <link href="https://yes5144.github.io//post/vim-jian-dan-pei-zhi">
        </link>
        <updated>2019-07-01T16:24:11.000Z</updated>
        <content type="html"><![CDATA[<h4 id="vimrc来自实验楼的-环境配置">.vimrc来自实验楼的 环境配置</h4>
<p>https://www.shiyanlou.com/courses/485
https://github.com/wklken/vim-for-server</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Percona-toolkit安装]]></title>
        <id>https://yes5144.github.io//post/percona-toolkit-an-zhuang</id>
        <link href="https://yes5144.github.io//post/percona-toolkit-an-zhuang">
        </link>
        <updated>2019-06-30T13:55:36.000Z</updated>
        <content type="html"><![CDATA[<p><a href="https://www.percona.com">Percona官网</a>
最新工具介绍：https://www.percona.com/doc/percona-toolkit/LATEST/installation.html</p>
<h4 id="for-rhel-or-centos">For RHEL or CentOS:</h4>
<pre><code>yum install https://repo.percona.com/yum/percona-release-latest.noarch.rpm
sudo yum install percona-toolkit
</code></pre>
<p><a href="https://www.percona.com/downloads/percona-toolkit/LATEST/">手动选择和下载</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[MySQL 基础回顾]]></title>
        <id>https://yes5144.github.io//post/mysql-ji-chu-hui-gu</id>
        <link href="https://yes5144.github.io//post/mysql-ji-chu-hui-gu">
        </link>
        <updated>2019-06-30T09:13:58.000Z</updated>
        <content type="html"><![CDATA[<h4 id="增删改查">增删改查</h4>
<h4 id="备份恢复">备份恢复</h4>
<h4 id="分析工具">分析工具</h4>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Centos7 安装mysql57]]></title>
        <id>https://yes5144.github.io//post/centos7-an-zhuang-mysql57</id>
        <link href="https://yes5144.github.io//post/centos7-an-zhuang-mysql57">
        </link>
        <updated>2019-06-30T09:09:49.000Z</updated>
        <content type="html"><![CDATA[<h4 id="mysql57-开始支持json字段类型了快来体验一把">mysql5.7 开始支持json字段类型了，快来体验一把</h4>
<blockquote>
<p>本文采用yum 安装</p>
</blockquote>
<pre><code>## 配置mysql57仓库
cat &gt;/etc/yum.repos.dmysql-community.repo &lt;&lt;EOF
[mysql-connectors-community]
name=MySQL Connectors Community
baseurl=http://repo.mysql.com/yum/mysql-connectors-community/el/7/$basearch/
enabled=1
gpgcheck=1
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-mysql

[mysql-tools-community]
name=MySQL Tools Community
baseurl=http://repo.mysql.com/yum/mysql-tools-community/el/7/$basearch/
enabled=1
gpgcheck=1
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-mysql

# Enable to use MySQL 5.5
[mysql55-community]
name=MySQL 5.5 Community Server
baseurl=http://repo.mysql.com/yum/mysql-5.5-community/el/7/$basearch/
enabled=0
gpgcheck=1
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-mysql

# Enable to use MySQL 5.6
[mysql56-community]
name=MySQL 5.6 Community Server
baseurl=http://repo.mysql.com/yum/mysql-5.6-community/el/7/$basearch/
enabled=0
gpgcheck=1
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-mysql

[mysql57-community]
name=MySQL 5.7 Community Server
baseurl=http://repo.mysql.com/yum/mysql-5.7-community/el/7/$basearch/
enabled=1
gpgcheck=1
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-mysql
EOF
## 开始安装，修改密码，修改默认字符类型

## 

</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Centos7 安装谷歌浏览器]]></title>
        <id>https://yes5144.github.io//post/centos7-an-zhuang-gu-ge-liu-lan-qi</id>
        <link href="https://yes5144.github.io//post/centos7-an-zhuang-gu-ge-liu-lan-qi">
        </link>
        <updated>2019-06-30T09:00:19.000Z</updated>
        <content type="html"><![CDATA[<h4 id=""></h4>
<p>参考链接：https://blog.csdn.net/u010472499/article/details/72327963</p>
<pre><code>[root@justdoit ~]# cat &gt; /etc/yum.repos.d/google-chrome.repo &lt;&lt;EOF
[google-chrome]
name=google-chrome
baseurl=http://dl.google.com/linux/chrome/rpm/stable/x86_64
enabled=1
gpgcheck=1
gpgkey=https://dl.google.com/linux/linux_signing_key.pub
EOF

yum clean all
yum makecache
yum install google-chrome-stable
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Python 基础回顾]]></title>
        <id>https://yes5144.github.io//post/python-ji-chu-hui-gu</id>
        <link href="https://yes5144.github.io//post/python-ji-chu-hui-gu">
        </link>
        <updated>2019-06-30T07:27:49.000Z</updated>
        <content type="html"><![CDATA[<h4 id="python">Python</h4>
<h4 id="控制语句">控制语句</h4>
<pre><code>## if选择结构
if 条件1:
    代码1
elif 条件2:
    代码2
else:
    代码n
		
## while循环
while 条件:
    代码

## for循环
for 循环变量 in 可迭代对象:
    代码块

### break, continue, pass
</code></pre>
<h4 id="字符串">字符串</h4>
<pre><code>## 字符串输入
number = int(input('input your favorite number')) # input中参数是输出提示
print(f'Your favorite number is {number}')    # 字符串前的f表示这是一个格式串，变量不存在则报错。

## 字符串运算
alice = 'my name is '
bob = 'Li Hua'

alice +bob
bob * 3
'Li' in bob
alice[0:5]

### 字符串操作符： + * in  not in  []

### 字符串内建方法
count(), find(), isalpha(), isdigit(), join(), lstrip(), replace(), rstrip(), split(), startswith(), strip(), zfill()

print('-'.join(['3'.'2','5','5']))
index=33
print('image'+ str(index).zfill(4))

</code></pre>
<h4 id=""></h4>
<h4 id="变量和数据类型">变量和数据类型</h4>
<pre><code>## Tuple（元组）
(3,3,2,1)
## Set（集合）
{3,2,1}
## List（列表）
[3,3,2.1]
## Dict（字典）
key:value
## 字符串

</code></pre>
<h4 id="函数">函数</h4>
<ul>
<li>不带默认值参数：def func(a):</li>
<li>带默认值参数：def func(a, b=1):</li>
<li>任意位置参数：def func(a, b=1, *c):</li>
<li>任意键值参数：def func(a, b=1, *c, **d):</li>
</ul>
<p>这也是他们的出场顺序安排</p>
<h4 id="类和对象">类和对象</h4>
<pre><code>对象是类的一个实例。
类在python中由3部分组成--类名、属性和方法。
类的属性分两种，分别是类属性和实例属性

class Vehicle:
	 class_property =0   # 没有self，并且写在方法外，这是类属性
	 
	 def __init__(self):
        temporary_var = -1    # 写在方法里，但是没有self，这是一个局部变量
        self.instance_property = 1  # 有self，这里创建了一个实例属性
        Vehicle.class_property +1   # 操作类属性需要写类名

</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Linux 替代命令介绍]]></title>
        <id>https://yes5144.github.io//post/linux-ti-dai-ming-ling-jie-shao</id>
        <link href="https://yes5144.github.io//post/linux-ti-dai-ming-ling-jie-shao">
        </link>
        <updated>2019-06-29T17:27:50.000Z</updated>
        <content type="html"><![CDATA[<h4 id="tldrlinux-手册页的简化替代品">tldr：Linux 手册页的简化替代品</h4>
<blockquote>
<p>tldr: 如果你经常不想详读man文档，那么你应该试试这个小工具
参考链接：https://www.hi-linux.com/posts/16098.html
参考链接：https://zhuanlan.zhihu.com/p/52637238</p>
</blockquote>
<pre><code>yum install nodejs
yum install npm
npm install -g tldr
tldr --update
## 使用实例
tldr kill
</code></pre>
<h4 id="tmux终端复用工具替代screen-nohup">tmux：终端复用工具，替代screen、nohup</h4>
<h5 id="tmux-常用操作">tmux 常用操作</h5>
<pre><code>yum install tmux 

tmux  # 默认创建一个会话，以数字命名
tmux ls

tmux new -s ccc   # 新创一个会话ccc命名
tmux ls

tmux a -t aaa     # 返回一个已知aaa会话
tmux detach       # 退出会话不是关闭

tmux kill-session -t bbb  # 关闭会话
tmux ls
</code></pre>
<h5 id="screen-常用操作">screen 常用操作</h5>
<pre><code>yum install screen

screen -S yourname ## 新建一个叫yourname的session
screen -ls 			## 列出当前所有的session
screen -r yourname ## 回到yourname这个session
screen -d yourname ## 远程detach某个session
screen -d -r yourname ## 结束当前session并回到yourname这个session
</code></pre>
<h4 id="htop-提供更美观-更方便的进程监控工具替代top命令">htop: 提供更美观、更方便的进程监控工具，替代top命令</h4>
<h4 id="myclimysql客户端支持语法高亮和命令补全效果类似ipython可以替代mysql命令">mycli：mysql客户端，支持语法高亮和命令补全，效果类似ipython，可以替代mysql命令</h4>
<h4 id="yapfgoogle开发的python代码格式规范化工具支持pep8以及google代码风格">yapf：Google开发的python代码格式规范化工具，支持pep8以及Google代码风格</h4>
<h4 id="shellcheckshell脚本静态检查工具能够识别语法错误以及不规范的写法">shellcheck：shell脚本静态检查工具，能够识别语法错误以及不规范的写法</h4>
<h4 id="jq-json文件处理以及格式化显示支持高亮可以替换python-m-jsontool">jq: json文件处理以及格式化显示，支持高亮，可以替换python -m json.tool</h4>
<h4 id="axel多线程下载工具下载文件时可以替代curl-wget">axel：多线程下载工具，下载文件时可以替代curl、wget</h4>
<h4 id="mosh基于udp的终端连接可以替代ssh连接更稳定即使ip变了也能自动重连">mosh：基于UDP的终端连接，可以替代ssh，连接更稳定，即使IP变了，也能自动重连</h4>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Linux 安全加固]]></title>
        <id>https://yes5144.github.io//post/linux-an-quan-jia-gu</id>
        <link href="https://yes5144.github.io//post/linux-an-quan-jia-gu">
        </link>
        <updated>2019-06-29T17:08:28.000Z</updated>
        <content type="html"><![CDATA[<h4 id="ssh配置文件">ssh配置文件</h4>
<pre><code>## 修改默认ssh端口
sed  -i 's@#Port 22@Port 60022@g' /etc/ssh/sshd_config
systemctl restart sshd

</code></pre>
<h4 id="系统最小化启动">系统最小化启动</h4>
<h4 id="防火墙指定ip限制">防火墙指定ip限制</h4>
<h4 id="ssh访问失败次数限制">ssh访问失败次数限制</h4>
<pre><code>cat &gt;/bin/ssh_scan.sh &lt;&lt;EOF
#! /bin/bash
cat /var/log/secure|awk '/Failed/{print $(NF-3)}'|sort|uniq -c|awk '{print $2&quot;=&quot;$1;}' &gt; /tmp/black.txt
DEFINE=&quot;10&quot;
for i in `cat  /tmp/black.txt`
do
    IP=`echo $i |awk -F= '{print $1}'`
    NUM=`echo $i|awk -F= '{print $2}'`
    if [ $NUM -gt $DEFINE ];then
         grep $IP /etc/hosts.deny &gt; /dev/null
         if [ $? -gt 0 ];then
            echo &quot;sshd:$IP&quot; &gt;&gt; /etc/hosts.deny
         fi
    fi
done
EOF
## 加入定时任务
echo '####SSH_Failed_Access_Scan####' &gt;&gt;/etc/crontab
echo '*/1 * * * * root sh /bin/ssh_scan.sh' &gt;&gt; /etc/crontab

</code></pre>
<h4 id="安全扫描工具-nmap">安全扫描工具 - NMap</h4>
<blockquote>
<p>NMap 是 Linux 下的网络连接扫描和嗅探工具包用来扫描网上电脑开放的网络连接端。</p>
</blockquote>
<pre><code>yum install nmap

nmap 10.1.3.20 
nmap -o 10.1.3.20 
</code></pre>
]]></content>
    </entry>
</feed>